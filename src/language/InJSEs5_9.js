import React from 'react';

function InJSEs5_9() {
  return (
    <div>
      <div className='ad-container'>  
          {/*  реклама  */}
        </div>
        
        <h1>प्सेडो प्रोटोकॉल जावास्क्रिप्ट</h1>

<p>जावास्क्रिप्ट में "प्सेडो प्रोटोकॉल" का उपयोग करने का उदाहरण: एक ऐंकर {'<a>'} टैग के href गुणमें. जब उपयोगकर्ता लिंक पर क्लिक करता है, तो वह href गुणमें निर्दिष्ट जावास्क्रिप्ट कोड का क्रियान्वयन करेगा।</p>

<p>यहां एक वैकल्पिक तरीका है जिससे हम जावास्क्रिप्ट प्रोटोकॉल का उपयोग नहीं करके समान कोड को लिख सकते हैं:</p>

<code>
  <p>{'<'}<span className='green'>a</span> <span className='blue'>href</span>=<span className='blue1'>"#"</span> <span className='blue'>onclick</span>=<span className='blue1'>"myFunction(); return false;"</span>{'>'}Click{'</'}<span className='green'>a</span>{'>'}</p>

  <p>{'<'}<span className='green'>script</span>{'>'}</p>

  <p>&nbsp;<span className='red'>function</span> myFunction() {'{'}</p>

  <p>&nbsp;&nbsp;{'console'}.<span className='blue'>log</span>(<span className='blue1'>"Hello"</span>);</p>

  <p>&nbsp;{'}'}</p>

  <p>{'</'}<span className='green'>script</span>{'>'}</p>
</code>

<p>इस उदाहरण में, हमने एक खाली ऐंकर href गुणमें और onclick घटना संबंधीक उपयोग किया है ताकि जब उपयोगकर्ता लिंक पर क्लिक करता है, तो myFunction() कार्य को बुलाया जाए। return false बयान से लिंक को नई पृष्ठ पर नेविगेट करने से रोका जाता है।</p>

<p>दोनों उदाहरण लिंक पर क्लिक किए जाने पर कंसोल में "Hello" को लॉग करने के समान परिणाम प्राप्त करते हैं। हालांकि, दूसरा उदाहरण बेहतर प्रैक्टिस माना जाता है क्योंकि यह जावास्क्रिप्ट कोड को एचटीएमएल मार्कअप से अलग करता है, जिससे कोड को रखना और संशोधित करना आसान होता है।</p>

<h2>ब्राउज़र ऑब्जेक्ट मॉडल (बीओएम)</h2>

<p>जावास्क्रिप्ट ES5 में, डॉक्यूमेंट ऑब्जेक्ट मॉडल (डोम) एक संरचित पेड़ के रूप में वेब पेज के एचटीएमएल तत्वों का प्रतिनिधित्व करता है, जिससे जावास्क्रिप्ट कोड को पेज की सामग्री के साथ बातचीत करने और परिवर्तन करने की सुविधा मिलती है। निम्नलिखित कुछ सामान्य ऑब्जेक्ट हैं जो ब्राउज़र विंडो ऑब्जेक्ट में होते हैं:</p>

<p>1. <b>window:</b> ब्राउज़र के जावास्क्रिप्ट विषय के शीर्ष-स्तरीय ऑब्जेक्ट, जो ब्राउज़र विंडो को प्रतिनिधित करता है। सभी वैश्विक जावास्क्रिप्ट ऑब्जेक्ट, फ़ंक्शन, और चर ऑटोमेटिक रूप से विंडो ऑब्जेक्ट के सदस्य बन जाते हैं।</p>

<p>2. <b>history:</b> इतिहास ऑब्जेक्ट जावास्क्रिप्ट को ब्राउज़र के इतिहास के साथ बातचीत करने की अनुमति देता है, जिससे आप पृष्ठों के बीच पीछे और आगे जा सकते हैं।</p>

<p>उदाहरण</p>

<code><p>window.history.back(); <span className='green'>// एक पृष्ठ पीछे जाएं</span> </p></code>

<p>3. <b>navigator:</b> नेविगेटर ऑब्जेक्ट उपयोगकर्ता के कंप्यूटर पर चल रहे वेब ब्राउज़र और ऑपरेटिंग सिस्टम के बारे में जानकारी प्रदान करता है।</p>

<p>उदाहरण</p>

<code><p>{'console'}.<span className='blue'>log</span>(navigator.userAgent); <span className='green'>// ब्राउज़र के उपयोगकर्ता एजेंट स्ट्रिंग को आउटपुट करें</span></p></code>

<p>4. <b>screen:</b> स्क्रीन ऑब्जेक्ट उपयोगकर्ता के स्क्रीन के रेज़ोल्यूशन और रंग गहराई के बारे में जानकारी प्रदान करता है।</p>

<p>उदाहरण:</p>

<code><p>{'console'}.<span className='blue'>log</span>(screen.width);<span className='green'> // उपयोगकर्ता की स्क्रीन की चौड़ाई को आउटपुट करें</span></p></code>

<p><span>5. location:</span> लोकेशन ऑब्जेक्ट वेब पृष्ठ के वर्तमान यूआरएल के बारे में जानकारी प्रदान करता है और आपको नए यूआरएल पर नेविगेट करने की अनुमति देता है।</p>

<p>उदाहरण:</p>

<code><p>{'console'}.<span className='blue'>log</span>(location.href);<span className='green'> // वर्तमान यूआरएल को आउटपुट करें location.href = "https://www.example.com"; // नए यूआरएल पर नेविगेट करें</span></p></code>

<p>6. <b>document:</b> डॉक्यूमेंट ऑब्जेक्ट वर्तमान वेब पृष्ठ की एचटीएमएल सामग्री का प्रतिनिधित्व करता है और जावास्क्रिप्ट कोड को पृष्ठ की सामग्री के साथ बातचीत और परिवर्तन करने की सुविधा प्रदान करता है।</p>

<p>उदाहरण:</p>

<code><p>{'document'}.<span className='blue'>getElementById</span>(<span className='blue1'>"myDiv"</span>).<span className='blue'>innerHTML </span>= <span className='blue1'>"नई सामग्री"</span>; <span className='green'>// "myDiv" आईडी वाले तत्व की एचटीएमएल सामग्री को बदलता है</span></p></code>

<p>7. <b>methods:</b> ब्राउज़र विंडो ऑब्जेक्ट में कई अन्य विधियाँ उपलब्ध हैं, जैसे alert(), prompt(), confirm(), setInterval(), और setTimeout(), जिनसे आप संवाद बॉक्स प्रदर्शित कर सकते हैं, टाइमर सेट कर सकते हैं, और अधिक कुछ।</p>

<p>उदाहरण:</p>

<code><p><span className='blueviole'>alert</span>(<span className='blue1'>"नमस्ते, दुनिया!"</span>); <span className='green'>// "नमस्ते, दुनिया!" संदेश के साथ एक अलर्ट संवाद बॉक्स प्रदर्शित करता है</span></p></code>

<h5>ब्राउज़र ऑब्जेक्ट मॉडल (बीओएम) एक जावास्क्रिप्ट एपीआई है जो वेब ब्राउज़र के विंडो ऑब्जेक्ट और इसकी गुणों तक पहुँच प्रदान करता है। विंडो ऑब्जेक्ट की एक गुण का इतिहास ऑब्जेक्ट है, जिसमें उपयोगकर्ता का ब्राउज़िंग इतिहास होता है। </h5>

<p>इतिहास ऑब्जेक्ट ब्राउज़िंग इतिहास में नेविगेट करने के लिए कई विधियाँ प्रदान करता है। </p>

<p><b>history.go()</b> विधि का उपयोग ब्राउज़िंग इतिहास में एक विशिष्ट पृष्ठ पर जाने के लिए किया जा सकता है। यह विधि एक सकारात्मक या नकारात्मक पूर्णांक को तर्क के रूप में स्वीकार करती है। यदि तर्क सकारात्मक पूर्णांक है, तो यह इतिहास में आगे नेविगेट करता है, और यदि यह नकारात्मक है, तो यह पीछे नेविगेट करता है। उदाहरण के लिए, history.go(-1) ब्राउज़िंग इतिहास में एक पृष्ठ पीछे जाएगा, और history.go(2) दो पृष्ठों में आगे जाएगा।</p>

<p><b>history.back()</b> विधि ब्राउज़िंग इतिहास में एक पृष्ठ पीछे जाने के लिए उपयोग की जाती है, जो <b>history.go(-1)</b> के समान है।</p>

<p><b>history.forward()</b> विधि ब्राउज़िंग इतिहास में एक पृष्ठ आगे जाने के लिए उपयोग की जाती है, जो <b>history.go(1)</b> के समान है।</p>

<p><b>history.length </b>गुण प्रदान करता है ब्राउज़िंग इतिहास में पृष्ठों की संख्या।</p>

<p>यहां एक उदाहरण है कि इतिहास ऑब्जेक्ट का कैसे उपयोग किया जाता है:</p>

<code>
  <p><span className='green'>{ '// ब्राउज़िंग इतिहास में एक पृष्ठ पीछे जाएं'}</span> history.<span className='blue'>back</span>();</p>

  <p><span className='green'>{ '// ब्राउज़िंग इतिहास में एक पृष्ठ आगे जाएं'}</span> history.<span className='blue'>forward</span>();</p>

  <p><span className='green'>{ '// ब्राउज़िंग इतिहास में तीसरे पृष्ठ पर जाएं'}</span> history.<span className='blue'>go</span>(<span className='blue1'>2</span>);</p>

  <p><span className='green'>{ '// ब्राउज़िंग इतिहास में पृष्ठों की संख्या प्राप्त करें'}</span>  {'console'}.<span className='blue'>log</span>(history.<span className='blue'>length</span>);</p>
</code>


<h4>ब्राउज़र ऑब्जेक्ट मॉडल (बीओएम) जावास्क्रिप्ट एपीआई का एक हिस्सा है जो ब्राउज़र की विंडो और इसके गुणों तक पहुंच प्रदान करता है। नेविगेटर ऑब्जेक्ट बीओएम का हिस्सा है और ब्राउज़र को प्रतिनिधित करता है। यह वह जानकारी प्रदान करता है जो वर्तमान में उपयोग किया जा रहा है ब्राउज़र के बारे में।</h4>
<p>यहां नेविगेटर ऑब्जेक्ट के कुछ गुण और उनके व्याख्यान हैं:</p>
<code>
  <p>navigator.<span className='blue'>appCodeName</span>: ब्राउज़र का कोड नाम लौटाता है।</p>
  <p>navigator.<span className='blue'>appName</span>: ब्राउज़र का नाम लौटाता है।</p>
  <p>navigator.<span className='blue'>appVersion</span>: ब्राउज़र के संस्करण जानकारी लौटाता है।</p>
  <p>navigator.<span className='blue'>language</span>: उस भाषा को लौटाता है जो ब्राउज़र में सेट की गई है।</p>
  <p>navigator.<span className='blue'>platform</span>: उपयोगकर्ता के ऑपरेटिंग सिस्टम प्लेटफ़ॉर्म को लौटाता है जिस पर ब्राउज़र चल रहा है।</p>
  <p>navigator.<span className='blue'>userAgent</span>: ब्राउज़र के लिए उपयोगकर्ता एजेंट स्ट्रिंग लौटाता है</p>
</code>
<p>यहां नेविगेटर ऑब्जेक्ट का उपयोग कैसे करें, उसका एक उदाहरण:</p>
<code>
  <p>{'console'}.<span className='blue'>log</span>(navigator.appName); <span className='green'>// ब्राउज़र का नाम आउटपुट करें</span></p>
  <p>{'console'}.<span className='blue'>log</span>(navigator.userAgent); <span className='green'>// ब्राउज़र के लिए उपयोगकर्ता एजेंट स्ट्रिंग आउटपुट करें</span></p>
</code>

<p>नेविगेटर ऑब्जेक्ट के गुणों का उपयोग करके, आप उपयोगकर्ता द्वारा चलाए जा रहे ब्राउज़र के आधार पर विभिन्न तरह का जावास्क्रिप्ट कोड लिख सकते हैं।</p>

<h3>जावास्क्रिप्ट में ब्राउज़र ऑब्जेक्ट मॉडल (बीओएम) ब्राउज़र विंडो और इसके गुणों के साथ बातचीत करने का एक तरीका प्रदान करता है। window.screen ऑब्जेक्ट बीओएम का हिस्सा है और उपयोगकर्ता की स्क्रीन के बारे में जानकारी प्रदान करता है।</h3>

<p>यहां <b>window.screen</b> के गुणों की व्याख्या है:</p>

<p><b>screen.height:</b> उपयोगकर्ता की स्क्रीन की कुल ऊंचाई को पिक्सेल में लौटाता है।</p>
<p><b>screen.width:</b> उपयोगकर्ता की स्क्रीन की कुल चौड़ाई को पिक्सेल में लौटाता है।</p>

<p><b>screen.availHeight:</b> उपयोगकर्ता की स्क्रीन की उपलब्ध ऊंचाई को पिक्सेल में लौटाता है, विंडोज़ टास्कबार और अन्य सिस्टम तत्वों को छोड़कर।</p>

<p><b>screen.availWidth:</b> उपयोगकर्ता की स्क्रीन की उपलब्ध चौड़ाई को पिक्सेल में लौटाता है, विंडोज़ टास्कबार और अन्य सिस्टम तत्वों को छोड़कर।</p>

<p>इन गुणों का उपयोग करने का एक उदाहरण यहां है:</p>

<code>
  <p>{'console'}.<span className='blue'>log</span>(<span className='blue1'>"कुल स्क्रीन ऊंचाई: "</span> + window.<span className='blue'>screen</span>.<span className='blue'>height</span> + <span className='blue1'>" पिक्सेल"</span>);</p>
  <p>{'console'}.<span className='blue'>log</span>(<span className='blue1'>"कुल स्क्रीन चौड़ाई: "</span> + window.<span className='blue'>screen</span>.<span className='blue'>width</span> + <span className='blue1'>" पिक्सेल"</span>);</p>
  <p>{'console'}.<span className='blue'>log</span>(<span className='blue1'>"उपलब्ध स्क्रीन ऊंचाई: "</span> + window.<span className='blue'>screen</span>.<span className='blue'>availHeight</span> + <span className='blue1'>" पिक्सेल"</span>);</p>
  <p>{'console'}.<span className='blue'>log</span>(<span className='blue1'>"उपलब्ध स्क्रीन चौड़ाई: "</span> + window.<span className='blue'>screen</span>.<span className='blue'>availWidth</span> + <span className='blue1'>" पिक्सेल"</span>);</p>
</code>

<p>यह कोड स्क्रीन की ऊंचाई और चौड़ाई, साथ ही उपलब्ध स्क्रीन की ऊंचाई और चौड़ाई को कंसोल में लॉग करेगा।</p>

<p>ध्यान दें कि स्क्रीन ऑब्जेक्ट केवल पढ़ने योग्य है और संशोधित नहीं किया जा सकता है।</p>

<h3>ब्राउज़र ऑब्जेक्ट मॉडल (बीओएम) जावास्क्रिप्ट द्वारा प्रदान किए गए वेब ब्राउज़र्स के एक सेट हैं, जिसका उपयोग ब्राउज़र विंडो के साथ बातचीत करने के लिए किया जाता है। बीओएम में एक ऑब्जेक्ट है लोकेशन ऑब्जेक्ट, जो ब्राउज़र विंडो का वर्तमान URL प्रतिनिधित करता है। लोकेशन ऑब्जेक्ट के कई गुण होते हैं जिन्हें पहुंच और संशोधित किया जा सकता है ताकि URL के साथ बातचीत की जा सके।</h3>

<p>यहां <b>लोकेशन</b> ऑब्जेक्ट के गुणों की व्याख्या है:</p>

<p><b>लोकेशन.protocol</b>: यह गुण URL में प्रयोग की गई प्रोटोकॉल को निर्दिष्ट करता है, जैसे <span className='blue1'>"http:"</span> या <span className='blue1'>"https:"</span>।</p>

<p><b>लोकेशन.host:</b> यह गुण URL में डोमेन नाम और पोर्ट नंबर को निर्दिष्ट करता है, जैसे <span className='blue1'>"www.site.com:8080"</span>।</p>

<p><b>लोकेशन.hostname: </b> यह गुण URL में डोमेन नाम को निर्दिष्ट करता है, जैसे <span className='blue1'>"www.site.com"</span>।</p>

<p><b>लोकेशन.href:</b> यह गुण पूरा URL निर्दिष्ट करता है, जैसे <span className='blue1'>"http://www.site.com/about/?name=javascript#content"</span>।</p>

<p><b>लोकेशन.port:</b> यह गुण URL में पोर्ट नंबर को निर्दिष्ट करता है, जैसे <span className='blue1'>"8080"</span>।</p>

<p><b>लोकेशन.pathname:</b> यह गुण URL का पथ निर्दिष्ट करता है, जैसे <span className='blue1'>"/about/"</span>।</p>

<p><b>लोकेशन.search:</b> यह गुण URL में क्वेरी स्ट्रिंग को निर्दिष्ट करता है, जैसे <span className='blue1'>"?name=javascript"</span>।</p>

<p><b>लोकेशन.hash:</b> यह गुण URL में फ़्रेगमेंट आईडेंटिफायर को निर्दिष्ट करता है, जैसे <span className='blue1'>"#content"</span>।</p>

<p><b>लोकेशन</b> ऑब्जेक्ट के इन गुणों को पहुंचकर और संशोधित करके, आप उपयोगकर्ता के वर्तमान URL के साथ बातचीत कर सकते हैं, जैसे कि उपयोगकर्ता को एक विभिन्न पृष्ठ पर अनुप्रेषित करना या क्वेरी स्ट्रिंग को संशोधित करना।</p>

<p><b>setTimeout()</b> मेथड एक निर्मित जावास्क्रिप्ट फ़ंक्शन है जो एक निर्दिष्ट समय के बाद एक निर्दिष्ट फ़ंक्शन या कोड निष्पादित करता है। इसमें दो आर्ग्यूमेंट होते हैं: निष्पादित करने के लिए एक फ़ंक्शन, और मिलीसेकंड में एक समय विलम्ब।</p>

<p>आपके प्रदान किए गए उदाहरण कोड में, एक चर <b>टाइमर</b> को घोषित किया गया है और उसे <b>setTimeout()</b> फ़ंक्शन के लौटने का मूल्य दिया गया है। यहां निष्पादित होने वाला फ़ंक्शन एक सरल <b>कंसोल.लॉग()</b> बयान है जो कंसोल में "हैलो, वर्ल्ड!" को प्रिंट करता है एक देरी 2000 मिलीसेकंड (या 2 सेकंड) के बाद।</p>

<p>फिर <b>clearTimeout()</b> मेथड को टाइमर चर के साथ कॉल किया जाता है। इस मेथड से <b>setTimeout()</b> द्वारा सेट किए गए टाइमर को रद्द किया जाता है, जिसका मतलब है कि निर्दिष्ट देरी के बाद <b>कंसोल.लॉग()</b> बयान को निष्पादित नहीं किया जाएगा।</p>

<p>तो सारांश में, कोड एक फ़ंक्शन को निर्दिष्ट करने के लिए टाइमर सेट करता है 2 सेकंड के बाद, लेकिन फिर इस टाइमर को पूरा होने से पहले तत्काल रद्द करता है। यह जावास्क्रिप्ट में <b>setTimeout()</b> और <b>clearTimeout()</b> मेथड का उपयोग करने का एक सरल उदाहरण है।</p>   

<p>उदाहरण कोड जिसमें <b>setTimeout</b> का प्रयोग किया गया है:</p>


<code>
  <p><span className='blueviole'>function </span><span className='blue'>sayHello</span>() {'{'}</p>
  <p>{'console'}.<span className='blue'>log</span>(<span className='red'>"नमस्ते, दुनिया!"</span>);</p>
  <p>{'}'}</p>
  <p className='green'>// 2 सेकंड के बाद फ़ंक्शन को कॉल करें</p>
  <p><span className='blueviole'>var</span> <span className='blue'>timer</span> = setTimeout(sayHello, <span className='blue'>2000</span>);</p>
  <p className='green'>// फ़ंक्शन को निष्पादित होने से पहले टाइमर को रद्द करें</p>
  <p>clearTimeout(timer);</p>
 </code>

<p>इस उदाहरण में, <b>setTimeout</b> फ़ंक्शन का उपयोग किया गया है ताकि <b>sayHello</b> फ़ंक्शन को 2 सेकंड के लिए विलम्बित किया जाए। फ़ंक्शन को एक पैरामीटर के रूप में setTimeout को पास किया जाता है साथ ही मिलीसेकंड में समय विलम्ब। <b>setTimeout</b> फ़ंक्शन एक टाइमर आईडी वापस करता है जो कि <b>clearTimeout</b> फ़ंक्शन का उपयोग करके निष्पादित होने से पहले टाइमर को रद्द करने के लिए प्रयोग किया जाता है।</p>

<h3>घटनाएँ</h3>

<p>डॉक्यूमेंट ऑब्जेक्ट मॉडल (DOM) वेब दस्तावेज़ों के लिए एक प्रोग्रामिंग इंटरफ़ेस है। यह पृष्ठ को प्रतिष्ठित करता है ताकि कार्यक्रम दस्तावेज़ की संरचना, शैली और सामग्री को बदल सकें। घटनाएँ उपयोगकर्ता के द्वारा ब्राउज़र में होने वाले कार्रवाई या घटनाएँ होती हैं, जैसे कि किसी बटन पर क्लिक करना, पृष्ठ को स्क्रॉल करना, या कीबोर्ड पर एक कुंजी दबाना।</p>

<p>onclick</p>

<p>onmousedown</p>

<p>onmouseup</p>

<p>onmousemove</p>

<p>onmouseover</p>

<p>onmouseout</p>

<p>onkeydown</p>

<p>onkeyup</p>

<p>onkeypress</p>

<p>onfocus</p>

<p>onblur</p>

<p>onsubmit</p>

<p>onreset</p>

<p>onselect</p>

<p>onchange</p>

<p>onscroll</p>

<p>onload</p>

<p>onunload</p>

<p>सूचीबद्ध घटनाएँ घटना हैं, जो एक वेब पृष्ठ पर विशिष्ट घटना होती हैं जब वेब पृष्ठ पर कुछ होता है। उदाहरण के लिए, "onclick" घटना हैंडलर उस समय का निष्पादन करता है जब उपयोगकर्ता वेब पृष्ठ पर किसी तत्व पर क्लिक करता है। उसी प्रकार, "onload" घटना हैंडलर वेब पेज ब्राउज़र में लोड होने के बाद निष्पादित किया जाता है।</p>

<p>इन घटना हैंडलर को एचटीएमएल तत्वों में "on" उपसर्ग के साथ जोड़ा जा सकता है, जैसे "onclick" या "onload"। जब निर्दिष्ट घटना होती है, तो घटना हैंडलर को सौंपा गया फ़ंक्शन निष्पादित होता है। इससे डेवलपर्स को उपयोगकर्ता के कार्रवाई का प्रतिक्रिया देने वाले इंटरैक्टिव वेब पेज बनाने में सहायता मिलती है।</p>

<b><p>*  यह टेक्स्ट अनुवादक की मदद से लिखा गया है। यदि आपको कोई गलती मिलती है, तो कृपया हमें बताएं  *</p></b>
  
  <div className='ads-container'>  
  {/*  реклама  */}
</div> 
    </div>
  )
}

export default InJSEs5_9;