import React from 'react'

function FrJquery() {
  return (
    <div>
      <div className='ad-container'>  
          {/*  —Ä–µ–∫–ª–∞–º–∞  */}
        </div>
        
        <h1>JavaScript (JQuery)</h1>

<p>jQuery est une biblioth√®que JavaScript qui simplifie le processus d'√©criture du code JavaScript et de travail avec les documents HTML. Elle a √©t√© cr√©√©e en 2006 par John Resig et est actuellement l'une des biblioth√®ques JavaScript les plus populaires.</p>

<p>jQuery fournit une vari√©t√© de fonctions pour travailler avec le Mod√®le d'Objet de Document (DOM), ainsi que pour travailler avec AJAX (Asynchronous JavaScript and XML) et cr√©er des animations. Elle simplifie √©galement l'√©criture du code compatible avec diff√©rents navigateurs car la biblioth√®que jQuery g√®re automatiquement les probl√®mes de compatibilit√© des navigateurs.</p>

<p>Voici quelques exemples de l'utilisation de jQuery :</p>

<p>Manipulation des √©l√©ments du DOM :</p>

<code>
  <p><span className='green'>// Modification du texte d'un √©l√©ment ayant l'ID "myElement"</span></p>
  <p><span className='blueviole'>$</span>(<span className='blue1'>'#myElement'</span>).<span className='blue'>text</span>(<span className='blue1'>'Nouveau texte'</span>); </p>
  <p><span className='green'>// Ajout d'un nouvel √©l√©ment √† la page</span> </p>
  <p><span className='blueviole'>$</span>(<span className='blue1'>'body'</span>).<span className='blue'>append</span>(<span className='blue1'>'{'<'}div{'>'}Nouvel √©l√©ment{'</'}div{'>'}'</span>); </p>
</code>

<p>2. Gestion des √©v√©nements :</p>

<code>
  <p><span className='green'>// Gestion de l'√©v√©nement clic sur un bouton ayant l'ID "myButton"</span></p>
  <p><span className='blueviole'>$</span>(<span className='blue1'>'#myButton'</span>).<span className='blue'>click</span>{'('}<span className='red'>function</span>() {"{"}</p>
  <p>&nbsp;<span className='blueviole'>alert</span>(<span className='blue1'>'Bouton cliqu√© !'</span>);</p>
  <p>{"});"}</p>
</code>

<p>3. Travail avec AJAX :</p>

<code>
  <p><span className='green'>// Faire une requ√™te AJAX vers un serveur et mettre √† jour un √©l√©ment de la page avec la r√©ponse</span></p>
  <p> <span className='blueviole'>$</span>.<span className='blue'>get</span>{'('}<span className='blue1'>'https://exemple.com/api/donn√©es'</span>, <span className='red'>function</span>(r√©ponse) {"{"}</p>
  <p><span className='blueviole'>$</span>(<span className='blue1'>'#myElement'</span>).<span className='blue'>text</span>(r√©ponse); </p>
  <p>{" }); "}</p>
</code>

<p>En r√©sum√©, jQuery est un outil puissant et polyvalent pour simplifier le d√©veloppement JavaScript et rendre plus facile la cr√©ation de pages web dynamiques et interactives.</p>

<b>Pour inclure jQuery dans un document HTML, vous pouvez suivre les √©tapes suivantes :</b>

<p>1. T√©l√©chargez la biblioth√®que jQuery depuis le site officiel <a href="https://jquery.com/download/" target='_blank' > üëâüèº (https://jquery.com/download/)</a> ou utilisez un lien CDN (Content Delivery Network).</p>

<p>2. Cr√©ez un nouveau fichier HTML et ajoutez le code suivant √† l'int√©rieur de la section "head" de votre document HTML pour inclure la biblioth√®que jQuery :</p>

<code>
  <p>{'<'}<span className='green'>head</span>{'>'}</p>
  <p>&nbsp;{'<'}<span className='green'>script</span> <span className='blue'>src</span>=<span className='blue1'>"chemin/vers/jquery.js"</span>{'>'}{'</'}<span className='green'>script</span>{'>'}</p>
  <p>{'</'}<span className='green'>head</span>{'>'}</p>
</code>

<p>Remplacez "chemin/vers/jquery.js" par le chemin r√©el o√π se trouve la biblioth√®que jQuery sur votre serveur, ou utilisez le lien CDN :</p>

<code>
  <p>{'<'}<span className='green'>head</span>{'>'}</p>
  <p>&nbsp;{'<'}<span className='green'>script</span> <span className='blue'>src</span>=<span className='blue1'>"https://code.jquery.com/jquery-3.6.0.min.js"</span>{'>'}{'</'}<span className='green'>script</span>{'>'}</p>
  <p>{'</'}<span className='green'>head</span>{'>'}</p>
</code>

<p>3. Une fois que vous avez inclus la biblioth√®que jQuery dans votre document HTML, vous pouvez commencer √† l'utiliser en √©crivant du code JavaScript qui fait r√©f√©rence √† la biblioth√®que jQuery.</p>

<p>Par exemple, pour changer le texte d'un √©l√©ment HTML ayant l'ID "myElement", vous pouvez utiliser le code suivant :</p>

<code>
  <p>{'<'}<span className='green'>body</span>{'>'}</p>
  <p>&nbsp;{'<'}<span className='green'>div</span> <span className='blue'>id</span>=<span className='blue1'>"myElement"</span>{'>'}Bonjour le monde !{'</'}<span className='green'>div</span>{'>'}</p>
  <p>&nbsp;{'<'}<span className='green'>script</span>{'>'}</p>
  <p>&nbsp;&nbsp;{'$(document).ready(function() {'}</p>
  <p>&nbsp;&nbsp;&nbsp;<span className='blueviole'>$</span>(<span className='blue1'>"#myElement"</span>).<span className='blue'>text</span>(<span className='blue1'>"Nouveau texte !"</span>);</p>
  <p>&nbsp;&nbsp;{'});'}</p>
  <p>&nbsp;{'</'}<span className='green'>script</span>{'>'}</p>
  <p>{'</'}<span className='green'>body</span>{'>'}</p>
</code>

<p>Dans cet exemple, nous utilisons jQuery pour s√©lectionner l'√©l√©ment ayant l'ID "myElement" et changer son texte en "Nouveau texte !". Le code est envelopp√© dans une fonction document ready, qui garantit que le code est ex√©cut√© uniquement apr√®s le chargement du document.</p>

<p>En g√©n√©ral, inclure jQuery dans un document HTML est un processus simple qui consiste √† r√©f√©rencer la biblioth√®que jQuery et √† √©crire du code JavaScript qui utilise la biblioth√®que pour manipuler les √©l√©ments HTML.</p>

<p>La syntaxe jQuery est une combinaison de s√©lecteurs de style CSS et de code JavaScript, ce qui facilite la s√©lection et la manipulation des √©l√©ments HTML. Voici quelques exemples de syntaxe jQuery :</p>

<p><b>1. S√©lection d'√©l√©ments</b></p>

<p>Pour s√©lectionner un √©l√©ment HTML, vous pouvez utiliser la fonction jQuery, qui prend un s√©lecteur de style CSS comme argument. Par exemple, pour s√©lectionner tous les √©l√©ments "p" sur la page, vous pouvez utiliser le code suivant :</p>

<code><p><span className='blueviole'>$</span>(<span className='blue1'>'p'</span>) </p> </code>

<p>Vous pouvez √©galement encha√Æner les s√©lecteurs pour s√©lectionner des √©l√©ments en fonction de leur relation avec d'autres √©l√©ments. Par exemple, pour s√©lectionner tous les √©l√©ments "p" qui sont enfants d'un √©l√©ment "div", vous pouvez utiliser le code suivant :</p>

<code><p><span className='blueviole'>$</span>(<span className='blue1'>'div {'>'} p'</span>)</p></code>

<p><b>2. Modification des √©l√©ments</b></p>

<p>Une fois que vous avez s√©lectionn√© un √©l√©ment, vous pouvez modifier son contenu, ses attributs et ses propri√©t√©s CSS √† l'aide de jQuery. Par exemple, pour changer le texte de tous les √©l√©ments "p" sur la page, vous pouvez utiliser le code suivant :</p>

<code>
  <p><span className='blueviole'>$</span>(<span className='blue1'>'p'</span>).<span className='blue'>text</span>(<span className='blue1'>'Nouveau texte'</span>)</p>
  <p>Pour ajouter une <span className='green'>classe</span> √† un √©l√©ment, vous pouvez utiliser la m√©thode <span className='blue1'>"addClass"</span>:</p>
  <p><span className='blueviole'>$</span>(<span className='blue1'>'p'</span>).<span className='blue'>addClass</span>(<span className='blue1'>'surligner'</span>)</p>
</code>

<p><b>3. Gestion des √©v√©nements</b></p>

<p>Vous pouvez utiliser jQuery pour g√©rer des √©v√©nements tels que les clics, les survols de souris et les pressions de touche. Par exemple, pour g√©rer l'√©v√©nement clic d'un bouton ayant l'ID "myButton", vous pouvez utiliser le code suivant :</p>

<code>
  <p><span className='blueviole'>$</span>(<span className='blue1'>'#myButton'</span>).<span className='blue'>click</span>{'('}<span className='red'>function</span>() {"{"}</p>    
  <p>&nbsp;<span className='blueviole'>alert</span>(<span className='blue1'>'Bouton cliqu√© !'</span>) </p> 
  <p>{"})"}</p>
</code>

<p><b>4. Travail avec AJAX</b></p>

<p>jQuery facilite le travail avec les requ√™tes AJAX. Par exemple, pour effectuer une requ√™te GET vers une URL et g√©rer la r√©ponse, vous pouvez utiliser le code suivant :</p>

<code>
  <p>$.<span className='blue'>get</span>{'('}<span className='blue1'>'https://exemple.com/donn√©es'</span>, <span className='red'>function</span>(r√©ponse) {"{"}</p>
  <p>&nbsp;{"console"}.<span className='blue'>log</span>(r√©ponse)</p>
  <p>{"}) "}</p>
</code>

<p>En g√©n√©ral, la syntaxe jQuery est facile √† apprendre et √† utiliser, et elle fournit un moyen puissant de manipuler les √©l√©ments HTML et de g√©rer les √©v√©nements dans vos applications web.</p>

<p><b>Les m√©thodes de travers√©e jQuery sont utilis√©es pour naviguer et trouver des √©l√©ments dans un arbre DOM. Voici quelques exemples de m√©thodes de travers√©e qui traitent des √©l√©ments fr√®res.</b></p>    

<p><b>1. M√©thode next() :</b> </p>

<p>La m√©thode next() retourne l'√©l√©ment fr√®re suivant de l'√©l√©ment s√©lectionn√©. Par exemple :</p>

<code>
  <p><span className='blueviole'>$</span>{'(document).'}<span className='blue'>ready</span>{'('}<span className='red'>function</span>() {'{'}</p> 
  <p>&nbsp;<span className='blueviole'>$</span>(<span className='blue1'>"h2"</span>).<span className='blue'>next</span>().<span className='blue'>css</span>(<span className='blue1'>"background-color", "yellow"</span>); </p>
  <p>{'}); '}</p>
</code>

<p>Ce code s√©lectionne tous les √©l√©ments "h2" et applique un style CSS √† leur √©l√©ment fr√®re suivant en changeant sa couleur de fond en jaune</p>

<p><b>2. M√©thode prev() :</b></p>

<p>La m√©thode prev() renvoie l'√©l√©ment fr√®re pr√©c√©dent de l'√©l√©ment s√©lectionn√©. Par exemple :</p>

<code>
  <p><span className='blueviole'>$</span>(document).<span className='blue'>ready</span>{'('}<span className='red'>function</span>() {'{'}</p> 

  <p>&nbsp;<span className='blueviole'>$</span>(<span className='blue1'>"h2"</span>).<span className='blue'>prev</span>().<span className='blue'>css</span>(<span className='blue1'>"background-color", "yellow"</span>); </p>

  <p>{'});'}</p>
</code>

<p>Ce code s√©lectionne tous les √©l√©ments "h2" et applique un style CSS √† leur √©l√©ment fr√®re pr√©c√©dent en changeant sa couleur de fond en jaune.</p>
 
<b>3. M√©thode nextAll() :</b>

<p>La m√©thode nextAll() renvoie tous les √©l√©ments fr√®res suivants de l'√©l√©ment s√©lectionn√©. Par exemple :</p>

<code>
  <p><span className='blueviole'>$</span>(document).<span className='blue'>ready</span>{'('}<span className='red'>function</span>() {'{'}</p> 

  <p>&nbsp;<span className='blueviole'>$</span>(<span className='blue1'>"h2"</span>).<span className='blue'>nextAll</span>().<span className='blue'>css</span>(<span className='blue1'>"background-color", "yellow"</span>); </p>

  <p>{'}); '}</p>
</code>

<p>Ce code s√©lectionne tous les √©l√©ments "h2" et applique un style CSS √† tous leurs √©l√©ments fr√®res suivants en changeant leur couleur de fond en jaune.</p>

<b>4. M√©thode prevAll() :</b> 

<p>La m√©thode prevAll() renvoie tous les √©l√©ments fr√®res pr√©c√©dents de l'√©l√©ment s√©lectionn√©. Par exemple :</p>

<code>
  <p><span className='blueviole'>$</span>(document).<span className='blue'>ready</span>{'('}<span className='red'>function</span>() {'{'}</p> 

  <p>&nbsp;<span className='blueviole'>$</span>(<span className='blue1'>"h2"</span>).<span className='blue'>prevAll</span>().<span className='blue'>css</span>(<span className='blue1'>"background-color", "yellow"</span>); </p>

  <p>{'}); '}</p>
</code>

<p>Ce code s√©lectionne tous les √©l√©ments "h2" et applique un style CSS √† tous leurs √©l√©ments fr√®res pr√©c√©dents en changeant leur couleur de fond en jaune</p>

<b>5. M√©thode siblings() :</b>

<p>La m√©thode siblings() renvoie tous les √©l√©ments fr√®res de l'√©l√©ment s√©lectionn√©. Par exemple :</p>

<code>
  <p><span className='blueviole'>$</span>(document).<span className='blue'>ready</span>{'('}<span className='red'>function</span>() {'{'}</p> 

  <p>&nbsp;<span className='blueviole'>$</span>(<span className='blue1'>"h2"</span>).<span className='blue'>siblings</span>().<span className='blue'>css</span>(<span className='blue1'>"background-color", "yellow"</span>); </p>

  <p>{'}); '}</p>
</code>

<p>Ce code s√©lectionne tous les √©l√©ments "h2" et applique un style CSS √† tous leurs √©l√©ments fr√®res en changeant leur couleur de fond en jaune.</p>

<p>En g√©n√©ral, ces m√©thodes de travers√©e vous permettent de naviguer facilement et de s√©lectionner les √©l√©ments fr√®res d'un √©l√©ment HTML, ce qui peut √™tre utile √† diverses fins telles que le style ou la modification de contenu</p>

<p><b>JQuery (CSS)</b></p>

<code>
  <p><span className='blueviole'>$</span>(document).<span className='blue'>ready</span>{'('}<span className='red'>function</span>() {'{'}</p> 

  <p>&nbsp;<span className='blueviole'>$</span>(<span className='blue1'>".box"</span>).<span className='blue'>click</span>{'('}<span className='red'>function</span>() {'{'}</p>

  <p>&nbsp;&nbsp;<span className='blueviole'>$</span>(<span className='red'>this</span>).<span className='blue'>css</span>(<span className='blue1'>"background-color", "red"</span>);</p>

  <p>&nbsp;&nbsp;{'});'}</p>

  <p>{'});'}</p>
</code>

<p>Ce code s√©lectionne l'√©l√©ment avec la classe "box" en utilisant le s√©lecteur jQuery ".box". Ensuite, il attache un gestionnaire d'√©v√©nement de clic √† cet √©l√©ment en utilisant la m√©thode click(). √Ä l'int√©rieur de la fonction du gestionnaire d'√©v√©nement, nous utilisons la m√©thode css() pour changer la couleur de fond de l'√©l√©ment en rouge.</p>

<p>Ainsi, lorsque l'√©l√©ment de la bo√Æte est cliqu√©, sa couleur de fond passe du bleu au rouge. Nous pouvons √©galement utiliser la m√©thode css() pour changer d'autres propri√©t√©s CSS telles que la taille de police, la largeur de bordure, etc.</p>

<p>Voici un autre exemple qui montre comment changer plusieurs propri√©t√©s CSS en utilisant la m√©thode css() :</p>

<code>
  <p><span className='blueviole'>$</span>(document).<span className='blue'>ready</span>{'('}<span className='red'>function</span>() {'{'}</p>

  <p>&nbsp;<span className='blueviole'>$</span>(<span className='blue1'>".box"</span>).<span className='blue'>css</span>{'({'}</p>

  <p>&nbsp;&nbsp;<span className='blue1'>"background-color"</span>: <span className='blue1'>"green"</span>,</p>

  <p>&nbsp;&nbsp;<span className='blue1'>"width"</span>: <span className='blue1'>"150px"</span>, </p>

  <p>&nbsp;&nbsp;<span className='blue1'>"height"</span>: <span className='blue1'>"150px"</span>, </p>

  <p>&nbsp;&nbsp;<span className='blue1'>"border"</span>: <span className='blue1'>"2px solid black"</span> </p>

  <p>&nbsp;{' });'}</p>

  <p>{'});'}</p>
</code>

<p>Ce code s√©lectionne tous les √©l√©ments avec la classe "box" et change leur couleur de fond en vert, leur largeur et leur hauteur en 150px, et ajoute une bordure noire solide de 2px.</p>

<p>En g√©n√©ral, utiliser jQuery pour manipuler le CSS fournit un moyen puissant de styliser dynamiquement les √©l√©ments HTML en fonction des interactions de l'utilisateur ou d'autres √©v√©nements.</p>

<b>JQuery ($.each)</b>

<p>La m√©thode $.each() de jQuery est utilis√©e pour it√©rer sur des tableaux et des objets. Voici un exemple qui montre comment l'utiliser :</p>

<p>Supposons que nous ayons un tableau de nombres et que nous voulions it√©rer sur chaque √©l√©ment du tableau et afficher sa valeur dans la console :</p>
    
<code>
  <p><span className='red'>var</span> numbers = [<span className='blue1'>1, 2, 3, 4, 5</span>]; </p>

  <p>$.<span className='blue'>each</span>{'('}numbers, <span className='red'>function</span>(index, value){'{'}</p>

  <p>&nbsp;{'console'}.<span className='blue'>log</span>(<span className='blue1'>"Element at index "</span> + index + <span className='blue1'>" is "</span> + value);</p>

  <p>{'});'}</p>
</code>

<p>Dans ce code, nous passons le tableau numbers √† la m√©thode $.each() ainsi qu'une fonction de rappel prenant deux arguments : l'index de l'√©l√©ment actuel et la valeur de l'√©l√©ment actuel. √Ä l'int√©rieur de la fonction de rappel, nous utilisons console.log() pour afficher l'index et la valeur de l'√©l√©ment actuel dans la console.</p>
    
<p>La sortie de ce code serait :</p>

<code>
  <p>Element at index <span className='blue1'>0</span> is <span className='blue1'>1</span></p>

  <p>Element at index <span className='blue1'>1</span> is <span className='blue1'>2</span></p>

  <p>Element at index <span className='blue1'>2</span> is <span className='blue1'>3</span></p>

  <p>Element at index <span className='blue1'>3</span> is <span className='blue1'>4</span></p>

  <p>Element at index <span className='blue1'>4</span> is <span className='blue1'>5</span></p>
</code>

<p>Voici un autre exemple qui montre comment utiliser $.each() avec un objet :</p>

<p>Supposons que nous ayons un objet repr√©sentant les d√©tails d'une personne et que nous voulions it√©rer sur ses propri√©t√©s et afficher leurs valeurs dans la console :</p>

<code>
  <p><span className='red'>var</span> person = {'{'}</p>

  <p>&nbsp;<span className='blue'>name</span>: <span className='blue1'>"John"</span>,</p>

  <p>&nbsp;<span className='blue'>age</span>: <span className='blue1'>30</span>, </p>

  <p>&nbsp;<span className='blue'>occupation</span>: <span className='blue1'>"D√©veloppeur"</span> </p>

  <p>{'};'}</p>

  <p>$.<span className='blue'>each</span>{'('}person, <span className='red'>function</span>(key, value){'{'}</p>

  <p>&nbsp;{'console'}.<span className='blue'>log</span>(key + ": " + value);</p>

  <p>{'});'}</p>
</code>

<p>Dans ce code, nous passons l'objet person √† la m√©thode $.each() ainsi qu'une fonction de rappel prenant deux arguments : la cl√© de la propri√©t√© actuelle et la valeur de la propri√©t√© actuelle. √Ä l'int√©rieur de la fonction de rappel, nous utilisons console.log() pour afficher la cl√© et la valeur de la propri√©t√© actuelle dans la console.</p>

<p>La sortie de ce code serait :</p>

<code>
  <p><span className='blue'>name</span>: John </p>

  <p><span className='blue'>age</span>: <span className='blue1'>30</span> </p>

  <p><span className='blue'>occupation</span>: D√©veloppeur</p>
</code>

<p>En g√©n√©ral, la m√©thode $.each() de jQuery fournit un moyen pratique d'it√©rer sur des tableaux et des objets et d'effectuer des op√©rations sur leurs √©l√©ments.</p>

<b>√âv√©nements jQuery</b>

<p>jQuery fournit un ensemble riche de m√©thodes de gestion d'√©v√©nements qui permettent aux d√©veloppeurs d'attacher des gestionnaires d'√©v√©nements √† des √©l√©ments HTML et de r√©pondre aux interactions de l'utilisateur, telles que les clics de souris, les saisies au clavier et les soumissions de formulaire.</p>
    
<p>Voici un exemple qui montre comment utiliser la m√©thode click() de jQuery pour attacher un gestionnaire d'√©v√©nements de clic √† un √©l√©ment de bouton et r√©pondre au clic de l'utilisateur sur le bouton :</p>    
    
<code>
  <p>{'<'}!<span className='blue'>DOCTYPE</span> <span className='blue1'>html</span>{'>'}</p>

  <p>{'<'}<span className='green'>html</span>{'>'}</p>  

  <p>{'<'}<span className='green'>head</span>{'>'}</p>

  <p>&nbsp;{'<'}<span className='green'>title</span>{'>'}Exemple d'√©v√©nement jQuery{'</'}<span className='green'>title</span>{'>'}</p>

  <p>{'<'}<span className='green'>script</span> <span className='blue'>src</span>=<span className='blue1'>"https://code.jquery.com/jquery-3.6.0.min.js"</span>{'>'}{'</'}<span className='green'>script</span>{'>'}</p>

  <p>{'</'}<span className='green'>head</span>{'>'}</p>

  <p>{'<'}<span className='green'>body</span>{'>'}</p>

  <p>&nbsp;{'<'}<span className='green'>button</span> <span className='blue'>id</span>=<span className='blue1'>"myButton"</span>{'>'}Cliquez ici !{'</'}<span className='green'>button</span>{'>'}</p>

  <p>{'<'}<span className='green'>script</span>{'>'}</p>

  <p>&nbsp;{'$(document).ready(function(){'}</p>

  <p>&nbsp;<span className='blueviole'>$</span>(<span className='blue1'>"#myButton"</span>).<span className='blue'>click</span>{'('}<span className='red'>function</span>(){'{'}</p>

  <p>&nbsp;<span className='blueviole'>alert</span>(<span className='blue1'>"Bouton cliqu√© !"</span>);</p>

  <p>&nbsp;{'});'}</p>

  <p>{'});'}</p>

  <p>{'</'}<span className='green'>script</span>{'>'}</p>

  <p>{'</'}<span className='green'>body</span>{'>'}</p>

  <p>{'</'}<span className='green'>html</span>{'>'}</p>
</code>    

<p>Dans ce code, nous incluons la biblioth√®que jQuery dans la section head du document HTML et attachons un gestionnaire d'√©v√©nements <b>click()</b> √† l'√©l√©ment de bouton en utilisant le s√©lecteur d'ID <b>#myButton</b>. √Ä l'int√©rieur de la fonction de gestionnaire d'√©v√©nements, nous utilisons la m√©thode <b>alert()</b> pour afficher une bo√Æte de message avec le texte "Bouton cliqu√© !".</p>

<p>Lorsque l'utilisateur clique sur le bouton, l'√©v√©nement <b>click()</b> est d√©clench√©, et la fonction du gestionnaire d'√©v√©nements est ex√©cut√©e, affichant la bo√Æte de message.</p>

<p>Voici un autre exemple qui montre comment utiliser la m√©thode <b>submit()</b> de jQuery pour attacher un gestionnaire d'√©v√©nements de soumission √† un √©l√©ment de formulaire et emp√™cher le comportement de soumission par d√©faut du formulaire :</p>
    
<code>
  <p>{'<'}!<span className='blue'>DOCTYPE</span> <span className='blue1'>html</span>{'>'}</p>

  <p>{'<'}<span className='green'>html</span>{'>'}</p> 

  <p>{'<'}<span className='green'>head</span>{'>'}</p>

  <p>&nbsp;{'<'}<span className='green'>title</span>{'>'}Exemple d'√©v√©nement jQuery{'</'}<span className='green'>title</span>{'>'}</p>

  <p>{'<'}<span className='green'>script</span> <span className='blue'>src</span>=<span className='blue1'>"https://code.jquery.com/jquery-3.6.0.min.js"</span>{'>'}{'</'}<span className='green'>script</span>{'>'}</p>

  <p>{'</'}<span className='green'>head</span>{'>'}</p>

  <p>{'<'}<span className='green'>body</span>{'>'}</p>

  <p>{'<'}<span className='green'>form</span> <span className='blue'>id</span>=<span className='blue1'>"myForm"</span>{'>'}</p>

  <p>&nbsp;{'<'}<span className='green'>label</span> <span className='blue'>for</span>=<span className='blue1'>"name"</span>{'>'}Nom:{'</'}<span className='green'>label</span>{'>'}</p>

  <p>&nbsp;{'<'}<span className='green'>input</span> <span className='blue'>type</span>=<span className='blue1'>"text"</span> <span className='blue'>id</span>=<span className='blue1'>"name"</span> <span className='blue'>name</span>=<span className='blue1'>"name"</span>{'><'}<span className='green'>br</span>{'><'}<span className='green'>br</span>{'>'}</p>

  <p>&nbsp;{'<'}<span className='green'>label</span> <span className='blue'>for</span>=<span className='blue1'>"email"</span>{'>'}E-mail:{'</'}<span className='green'>label</span>{'>'}</p>

  <p>&nbsp;{'<'}<span className='green'>input</span> <span className='blue'>type</span>=<span className='blue1'>"email"</span> <span className='blue'>id</span>=<span className='blue1'>"email"</span> <span className='blue'>name</span>=<span className='blue1'>"email"</span>{'><'}<span className='green'>br</span>{'><'}<span className='green'>br</span>{'>'}</p>

  <p>&nbsp;{'<'}<span className='green'>input</span> <span className='blue'>type</span>=<span className='blue1'>"submit"</span> <span className='blue'>value</span>=<span className='blue1'>"Soumettre"</span>{'>'}</p>

  <p>{'</'}<span className='green'>form</span>{'>'}</p>

  <p>{'<'}<span className='green'>script</span>{'>'}</p>

  <p>&nbsp;{'$(document).ready(function(){'}</p>

  <p>&nbsp;<span className='blueviole'>$</span>(<span className='blue1'>"#myForm"</span>).<span className='blue'>submit</span>{'('}<span className='red'>function</span>(event){'{'}</p>

  <p>&nbsp;event.<span className='blue'>preventDefault</span>();</p>

  <p>&nbsp;<span className='blueviole'>alert</span>(<span className='blue1'>"Formulaire soumis !"</span>);</p>

  <p>&nbsp;{'});'}</p>

  <p>{' });'}</p>

  <p>{'</'}<span className='green'>script</span>{'>'}</p>

  <p>{'</'}<span className='green'>body</span>{'>'}</p>

  <p>{'</'}<span className='green'>html</span>{'>'}</p>
</code>

<p>Dans ce code, nous attachons un gestionnaire d'√©v√©nements <b>submit()</b> √† l'√©l√©ment de formulaire en utilisant le s√©lecteur d'ID <b>#myForm</b>. √Ä l'int√©rieur de la fonction du gestionnaire d'√©v√©nements, nous utilisons la m√©thode <b>preventDefault()</b> pour emp√™cher le comportement de soumission par d√©faut du formulaire, puis nous utilisons la m√©thode <b>alert()</b> pour afficher une bo√Æte de message avec le texte "Formulaire soumis !".</p>

<p>Lorsque l'utilisateur soumet le formulaire en cliquant sur le bouton Soumettre, l'√©v√©nement <b>submit()</b> est d√©clench√©, et la fonction du gestionnaire d'√©v√©nements est ex√©cut√©e, affichant la bo√Æte de message.</p>

<p>En r√©sum√©, jQuery fournit une interface simple et puissante pour manipuler le DOM et r√©pondre aux √©v√©nements de l'utilisateur dans les pages web.</p>


<b><p>* Texte √©crit avec l'aide d'un traducteur. Si vous trouvez une erreur, veuillez nous en informer *</p></b>
    <div className='ads-container'>  
  {/*  —Ä–µ–∫–ª–∞–º–∞  */}
</div> 
    </div>
  )
}

export default FrJquery;